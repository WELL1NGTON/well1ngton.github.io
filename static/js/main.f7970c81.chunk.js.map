{"version":3,"sources":["components/Navbar/index.tsx","pages/About/index.tsx","pages/Education/index.tsx","pages/Skills/index.tsx","pages/Projects/ProjectsData/abyssalDive/ProjectCardProps.ts","pages/Projects/ProjectsData/droneDelivery/ProjectCardProps.ts","pages/Projects/ProjectsData/boidsReactP5/ProjectCardProps.ts","pages/Projects/ProjectsData/kawaiiChat/ProjectCardProps.ts","pages/Projects/ProjectsData/Projects.ts","pages/Projects/ProjectsData/investmentBlog/ProjectCardProps.ts","pages/Projects/ProjectsData/githubPages/ProjectCardProps.ts","pages/Projects/components/ProjectCard.tsx","pages/Projects/index.tsx","components/Routes/index.tsx","App.tsx","serviceWorker.ts","i18n.ts","index.tsx","components/Navbar/profile_picture.jpeg","pages/Projects/ProjectsData/abyssalDive/images/abyssalDive01.webp","pages/Projects/ProjectsData/abyssalDive/images/abyssalDive02.webp","pages/Projects/ProjectsData/abyssalDive/images/abyssalDive03.webp","pages/Projects/ProjectsData/abyssalDive/images/abyssalDive04.webp","pages/Projects/ProjectsData/droneDelivery/images/droneDelivery01.webp","pages/Projects/ProjectsData/droneDelivery/images/droneDelivery02.webp","pages/Projects/ProjectsData/droneDelivery/images/droneDelivery03.webp","pages/Projects/ProjectsData/boidsReactP5/images/boidsReactP501.png","pages/Projects/ProjectsData/boidsReactP5/images/boidsReactP502.png","pages/Projects/ProjectsData/kawaiiChat/images/kawaiiChat01.webp","pages/Projects/ProjectsData/kawaiiChat/images/kawaiiChat02.webp","pages/Projects/ProjectsData/kawaiiChat/images/kawaiiChat03.webp","pages/Projects/ProjectsData/investmentBlog/images/investmentBlog01.png","pages/Projects/ProjectsData/investmentBlog/images/investmentBlog02.png","pages/Projects/ProjectsData/investmentBlog/images/investmentBlog03.png","pages/Projects/ProjectsData/investmentBlog/images/investmentBlog04.png"],"names":["NavbarMyGHPages","useState","selectedFlag","setCurrentFlag","i18n","useTranslation","on","lng","changeLanguage","flag","Navbar","bg","expand","Brand","to","Image","src","profilePicture","width","height","className","alt","roundedCircle","Nav","Item","Toggle","aria-controls","Collapse","id","Link","as","Trans","i18nKey","ButtonGroup","DropdownButton","title","getUnicodeFlagIcon","drop","Dropdown","eventKey","value","onClick","About","Jumbotron","Javascript","color","Typescript","NodeDotJs","Java","C","Cplusplus","Android","Androidstudio","Godotengine","ReactJs","Linux","Firebase","Mongodb","Git","abyssalDive","description","links","href","icon","imgs","abyssalDive01","abyssalDive02","abyssalDive03","abyssalDive04","droneDelivery","droneDelivery01","droneDelivery02","droneDelivery03","boidsReactP5","boidsReactP502","boidsReactP501","kawaiiChat","kawaiiChat01","kawaiiChat02","kawaiiChat03","projects","investmentBlog01","investmentBlog02","investmentBlog03","investmentBlog04","ProjectCard","cardLinks","Map","Googleplay","Gitlab","Github","faLink","Card","Header","Carousel","map","img","index","interval","key","Body","Title","desc","Text","Footer","link","target","rel","has","get","Projects","CardColumns","project","RouterMyGHPage","path","exact","component","Education","Skills","App","Routes","Boolean","window","location","hostname","match","use","Backend","LanguageDetector","initReactI18next","init","supportedLngs","nonExplicitSupportedLngs","load","fallbackLng","interpolation","escapeValue","react","wait","useSuspense","error","console","log","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.f7970c81.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Image, ButtonGroup, DropdownButton, Dropdown } from 'react-bootstrap';\nimport { useTranslation, Trans } from 'react-i18next';\nimport getUnicodeFlagIcon from 'country-flag-icons/unicode';\nimport profilePicture from './profile_picture.jpeg';\n\nconst NavbarMyGHPages: React.FC = () => {\n  const [selectedFlag, setCurrentFlag] = useState<'BR' | 'US'>('BR');\n  const { i18n } = useTranslation();\n\n  i18n.on('languageChanged', (lng) => {\n    if (lng === 'pt') setCurrentFlag('BR');\n    if (lng === 'en') setCurrentFlag('US');\n  });\n\n  const changeLanguage = (flag: 'US' | 'BR') => {\n    if (flag === 'BR') i18n.changeLanguage('pt');\n    if (flag === 'US') i18n.changeLanguage('en');\n  };\n\n  return (\n    <>\n      !!!EM CONSTRUÇÃO!!!\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand>\n          <Link to=\"/\">\n            <Image src={profilePicture} width=\"50\" height=\"50\" className=\"d-inline-block align-middle\" alt=\"React Bootstrap logo\" roundedCircle />\n          </Link>\n        </Navbar.Brand>\n        <Navbar className=\"ml-auto\">\n          <Nav.Item> </Nav.Item>\n        </Navbar>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link as={Link} to=\"/about\">\n              <Trans i18nKey={'navbar.about'} />\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/projects\">\n              <Trans i18nKey={'navbar.projects'} />\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/education\">\n              <Trans i18nKey={'navbar.education'} />\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/skills\">\n              <Trans i18nKey={'navbar.skills'} />\n            </Nav.Link>\n            {/* <Nav.Link as={Link} to=\"/interests\">\n              <Trans i18nKey={'navbar.interests'} />\n            </Nav.Link> */}\n          </Nav>\n        </Navbar.Collapse>\n\n        <ButtonGroup>\n          <DropdownButton as={ButtonGroup} title={getUnicodeFlagIcon(selectedFlag)} id=\"set-language-nested-dropdown\" drop={'left'}>\n            <Dropdown.Item eventKey=\"US\" value={'US'} onClick={() => changeLanguage('US')}>\n              {`${getUnicodeFlagIcon('US')} English`}\n            </Dropdown.Item>\n            <Dropdown.Item eventKey=\"BR\" value={'BR'} onClick={() => changeLanguage('BR')}>{`${getUnicodeFlagIcon('BR')} Português`}</Dropdown.Item>\n          </DropdownButton>\n        </ButtonGroup>\n      </Navbar>\n    </>\n  );\n};\n\nexport default NavbarMyGHPages;\n","import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport { useTranslation, Trans } from 'react-i18next';\n\nconst About: React.FC = () => {\n  useTranslation();\n\n  return (\n    <>\n      <Jumbotron className=\"m-3\">\n        <Trans i18nKey={'aboutPage.introduction.greetings'} />\n        <h1>\n          <Trans i18nKey={'aboutPage.introduction.name'} />\n        </h1>\n        <Trans i18nKey={'aboutPage.introduction.personalTitle'} />\n        <br />\n        <br />\n        <p>\n          <Trans i18nKey={'aboutPage.mainText.part1'} />\n        </p>\n        <p>\n          <Trans i18nKey={'aboutPage.mainText.part2'} />\n        </p>\n        <p>\n          <Trans i18nKey={'aboutPage.mainText.part3'} />\n        </p>\n      </Jumbotron>\n    </>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nconst About: React.FC = () => {\n  return (\n    <>\n      <Jumbotron className=\"m-3\">\n        <h1>Educação</h1>\n        <br />\n        <h3>\n          Bacharelado em Ciência da computação.\n          <br />\n          Universidade Estadual Paulista “Júlio de Mesquita Filho” (UNESP), Bauru, SP\n          <br />\n          (conclusão em março de 2017)\n        </h3>\n      </Jumbotron>\n    </>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport {\n  Javascript,\n  Java,\n  Typescript,\n  NodeDotJs,\n  C,\n  Cplusplus,\n  Git,\n  Android,\n  Androidstudio,\n  Godotengine,\n  ReactJs,\n  Firebase,\n  Mongodb,\n  Linux,\n} from '@icons-pack/react-simple-icons';\n\nconst About: React.FC = () => {\n  return (\n    <>\n      <Jumbotron className=\"m-3\">\n        <Javascript color=\"#F7DF1E\" />\n        <Typescript color=\"#007ACC\" />\n        <NodeDotJs color=\"#339933\" />\n        <Java color=\"#007396\" />\n        <C color=\"#A8B9CC\" />\n        <Cplusplus color=\"#00599C\" />\n        <Android color=\"#3DDC84\" />\n        <Androidstudio color=\"#3DDC84\" />\n        <Godotengine color=\"#478CBF\" />\n        <ReactJs color=\"#61DAFB\" />\n        <Linux color=\"#FCC624\" />\n        <Firebase color=\"#FFCA28\" />\n        <Mongodb color=\"#47A248\" />\n        <Git color=\"#F05032\" />\n      </Jumbotron>\n    </>\n  );\n};\n\nexport default About;\n","import abyssalDive01 from './images/abyssalDive01.webp';\nimport abyssalDive02 from './images/abyssalDive02.webp';\nimport abyssalDive03 from './images/abyssalDive03.webp';\nimport abyssalDive04 from './images/abyssalDive04.webp';\nimport { ProjectCardProps } from '../../components/ProjectCard';\n\nconst abyssalDive: ProjectCardProps = {\n  title: 'projectsPage.abyssalDive.title',\n  description: ['projectsPage.abyssalDive.description.part1', 'projectsPage.abyssalDive.description.part2'],\n  links: [\n    { href: 'https://play.google.com/store/apps/details?id=com.cmy.abyssaldive', icon: 'Googleplay' },\n    { href: 'https://gitlab.com/WELL1NGTON/submarine-game', icon: 'Gitlab' },\n  ],\n  imgs: [abyssalDive01, abyssalDive02, abyssalDive03, abyssalDive04],\n};\n\nexport default abyssalDive;\n","import { ProjectCardProps } from '../../components/ProjectCard';\nimport droneDelivery01 from './images/droneDelivery01.webp';\nimport droneDelivery02 from './images/droneDelivery02.webp';\nimport droneDelivery03 from './images/droneDelivery03.webp';\n\nconst droneDelivery: ProjectCardProps = {\n  title: 'projectsPage.droneDelivery.title',\n  description: ['projectsPage.droneDelivery.description.part1', 'projectsPage.droneDelivery.description.part2'],\n  links: [\n    { href: 'https://play.google.com/store/apps/details?id=org.godotengine.dronedeliverygame', icon: 'Googleplay' },\n    { href: 'https://github.com/WELL1NGTON/DroneDeliveryGame', icon: 'Github' },\n  ],\n  imgs: [droneDelivery01, droneDelivery02, droneDelivery03],\n};\n\nexport default droneDelivery;\n","import { ProjectCardProps } from '../../components/ProjectCard';\nimport boidsReactP501 from './images/boidsReactP501.png';\nimport boidsReactP502 from './images/boidsReactP502.png';\n\nconst boidsReactP5: ProjectCardProps = {\n  title: 'projectsPage.boidsReactP5.title',\n  description: ['projectsPage.boidsReactP5.description.part1', 'projectsPage.boidsReactP5.description.part2'],\n  links: [{ href: 'https://well1ngton.github.io/boids-react-p5/', icon: 'Link' }],\n  imgs: [boidsReactP502, boidsReactP501],\n};\n\nexport default boidsReactP5;\n","import { ProjectCardProps } from '../../components/ProjectCard';\nimport kawaiiChat01 from './images/kawaiiChat01.webp';\nimport kawaiiChat02 from './images/kawaiiChat02.webp';\nimport kawaiiChat03 from './images/kawaiiChat03.webp';\n\nconst kawaiiChat: ProjectCardProps = {\n  title: 'projectsPage.kawaiiChat.title',\n  description: ['projectsPage.kawaiiChat.description.part1', 'projectsPage.kawaiiChat.description.part2', 'projectsPage.kawaiiChat.description.part3'],\n  links: [\n    { href: 'https://play.google.com/store/apps/details?id=com.cmy.kawaiichat', icon: 'Googleplay' },\n    { href: 'https://gitlab.com/caiquecorcioli/kawaiichat/', icon: 'Gitlab' },\n  ],\n  imgs: [kawaiiChat01, kawaiiChat02, kawaiiChat03],\n};\n\nexport default kawaiiChat;\n","import { ProjectCardProps } from '../components/ProjectCard';\nimport abyssalDive from './abyssalDive/ProjectCardProps';\nimport droneDelivery from './droneDelivery/ProjectCardProps';\nimport boidsReactP5 from './boidsReactP5/ProjectCardProps';\nimport kawaiiChat from './kawaiiChat/ProjectCardProps';\nimport investmentBlog from './investmentBlog/ProjectCardProps';\nimport githubPages from './githubPages/ProjectCardProps';\n\nconst projects: ProjectCardProps[] = [abyssalDive, droneDelivery, boidsReactP5, kawaiiChat, investmentBlog, githubPages];\n\nexport default projects;\n","import { ProjectCardProps } from '../../components/ProjectCard';\nimport investmentBlog01 from './images/investmentBlog01.png';\nimport investmentBlog02 from './images/investmentBlog02.png';\nimport investmentBlog03 from './images/investmentBlog03.png';\nimport investmentBlog04 from './images/investmentBlog04.png';\n\nconst investmentBlog: ProjectCardProps = {\n  title: 'projectsPage.investmentBlog.title',\n  description: ['projectsPage.investmentBlog.description.part1', 'projectsPage.investmentBlog.description.part2'],\n  links: [{ href: 'https://github.com/WELL1NGTON/investment-blog-docker', icon: 'Github' }],\n  imgs: [investmentBlog01, investmentBlog02, investmentBlog03, investmentBlog04],\n};\n\nexport default investmentBlog;\n","import { ProjectCardProps } from '../../components/ProjectCard';\n// import kawaiiChat01 from './images/kawaiiChat01.webp';\n// import kawaiiChat02 from './images/kawaiiChat02.webp';\n// import kawaiiChat03 from './images/kawaiiChat03.webp';\n\nconst githubPages: ProjectCardProps = {\n  title: 'projectsPage.githubPages.title',\n  description: ['projectsPage.githubPages.description.part1', 'projectsPage.githubPages.description.part2'],\n  links: [{ href: 'https://github.com/WELL1NGTON/well1ngton.github.io', icon: 'Github' }],\n  imgs: ['/logo512.png'],\n};\n\nexport default githubPages;\n","import React, { FC, SVGAttributes } from 'react';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { Card, Image, Carousel } from 'react-bootstrap';\nimport { Gitlab, Googleplay, Github } from '@icons-pack/react-simple-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt as faLink } from '@fortawesome/free-solid-svg-icons';\n\ninterface Props extends SVGAttributes<SVGElement> {\n  color?: string;\n  size?: string | number;\n}\n\ntype CardLink = {\n  href: string;\n  icon: string;\n};\n\nexport type ProjectCardProps = {\n  title: string;\n  description: string[];\n  imgs: string[];\n  links: CardLink[];\n};\n\nconst ProjectCard: React.FC<ProjectCardProps> = ({ title, description, links, imgs }) => {\n  useTranslation();\n\n  const cardLinks: Map<string, React.ReactElement> = new Map([\n    ['Googleplay', <Googleplay color=\"#414141\" />],\n    ['Gitlab', <Gitlab color=\"#FCA121\" />],\n    ['Github', <Github color=\"#181717\" />],\n    ['Link', <FontAwesomeIcon icon={faLink} />],\n  ]);\n\n  return (\n    <Card className=\"bg-dark text-white\">\n      <Card.Header>\n        <Carousel>\n          {imgs.map((img, index) => {\n            return (\n              <Carousel.Item interval={15000}>\n                <div className=\"d-flex justify-content-center\">\n                  <Image key={`${index}_${img}`} height=\"300\" width=\"auto\" src={img} />\n                </div>\n              </Carousel.Item>\n            );\n          })}\n        </Carousel>\n      </Card.Header>\n\n      <Card.Body>\n        <Card.Title>\n          <Trans i18nKey={title} />\n        </Card.Title>\n\n        {description.map((desc, index) => {\n          return (\n            <Card.Text key={`${index}_${desc}`}>\n              <Trans i18nKey={desc} />\n            </Card.Text>\n          );\n        })}\n      </Card.Body>\n\n      <Card.Footer className=\"bg-light text-black\">\n        <Card.Text className=\"text-dark\">\n          {'Links: '}\n          {links.map((link, index) => {\n            return (\n              <>\n                <a href={link.href} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {cardLinks.has(link.icon) ? cardLinks.get(link.icon) : <>{link.icon}</>}\n                </a>{' '}\n              </>\n            );\n          })}\n        </Card.Text>\n      </Card.Footer>\n    </Card>\n  );\n};\n\nexport default ProjectCard;\n","import React from 'react';\nimport { CardColumns } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport projects from './ProjectsData/Projects';\nimport PorjectCard from './components/ProjectCard';\n\nconst Projects: React.FC = () => {\n  useTranslation();\n\n  return (\n    <>\n      <CardColumns className=\"m-3\">\n        {projects.map((project, index) => {\n          return (\n            <PorjectCard\n              title={project.title}\n              description={project.description}\n              imgs={project.imgs}\n              links={project.links}\n              key={`${project.title}_${index}`}\n            ></PorjectCard>\n          );\n        })}\n      </CardColumns>\n    </>\n  );\n};\n\nexport default Projects;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport About from '../../pages/About';\nimport Education from '../../pages/Education';\nimport Skills from '../../pages/Skills';\nimport Projects from '../../pages/Projects';\n\nconst RouterMyGHPage: React.FC = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={About} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/education\" component={Education} />\n      <Route path=\"/skills\" component={Skills} />\n      <Route path=\"/projects\" component={Projects} />\n    </Switch>\n  );\n};\n\nexport default RouterMyGHPage;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Navbar from './components/Navbar';\nimport Routes from './components/Routes';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Navbar />\n        <Routes />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init(\n    {\n      // lng: 'en',\n      supportedLngs: ['pt', 'en'],\n      nonExplicitSupportedLngs: true,\n      load: 'languageOnly',\n      // backend: {\n      //   /* translation file path */\n      //   loadPath: '/assets/i18n/{{ns}}/{{lng}}.json',\n      // },\n      fallbackLng: 'en',\n      // debug: true,\n      /* can have multiple namespace, in case you want to divide a huge translation into smaller pieces and load them on demand */\n      // ns: ['translations'],\n      // defaultNS: 'translations',\n      // keySeparator: false,\n      interpolation: {\n        escapeValue: false,\n        // formatSeparator: ',',\n      },\n      react: {\n        wait: true,\n        useSuspense: false,\n      },\n    },\n    (error) => {\n      if (error) console.log(error);\n    }\n  );\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/profile_picture.6f12e64b.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/abyssalDive01.1f9fe5bf.webp\";","module.exports = __webpack_public_path__ + \"static/media/abyssalDive02.fb88a0fd.webp\";","module.exports = __webpack_public_path__ + \"static/media/abyssalDive03.4a0ae42b.webp\";","module.exports = __webpack_public_path__ + \"static/media/abyssalDive04.df0999e1.webp\";","module.exports = __webpack_public_path__ + \"static/media/droneDelivery01.21e6a302.webp\";","module.exports = __webpack_public_path__ + \"static/media/droneDelivery02.97f0e472.webp\";","module.exports = __webpack_public_path__ + \"static/media/droneDelivery03.88db1922.webp\";","module.exports = __webpack_public_path__ + \"static/media/boidsReactP501.c5bff3dc.png\";","module.exports = __webpack_public_path__ + \"static/media/boidsReactP502.7c2359ca.png\";","module.exports = __webpack_public_path__ + \"static/media/kawaiiChat01.1fb90cc9.webp\";","module.exports = __webpack_public_path__ + \"static/media/kawaiiChat02.bb06e58a.webp\";","module.exports = __webpack_public_path__ + \"static/media/kawaiiChat03.859dedff.webp\";","module.exports = __webpack_public_path__ + \"static/media/investmentBlog01.5ea7e72c.png\";","module.exports = __webpack_public_path__ + \"static/media/investmentBlog02.775331dd.png\";","module.exports = __webpack_public_path__ + \"static/media/investmentBlog03.25995e1b.png\";","module.exports = __webpack_public_path__ + \"static/media/investmentBlog04.cc55a3a5.png\";"],"sourceRoot":""}